{
  "contract_name": "cw721-governed-collection-channels-proxy",
  "contract_version": "0.0.1",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "object",
    "properties": {
      "origin": {
        "type": [
          "string",
          "null"
        ]
      }
    },
    "additionalProperties": false
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "oneOf": [
      {
        "description": "Incoming msg from CW721 contract for ICS721 transfer.",
        "type": "object",
        "required": [
          "receive_nft"
        ],
        "properties": {
          "receive_nft": {
            "$ref": "#/definitions/Cw721ReceiveMsg"
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Add CW721 contract and channels to whitelist.",
        "type": "object",
        "required": [
          "add_to_whitelist"
        ],
        "properties": {
          "add_to_whitelist": {
            "type": "object",
            "required": [
              "channels",
              "sender"
            ],
            "properties": {
              "channels": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "sender": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Add CW721 conract and channels to whitelist.",
        "type": "object",
        "required": [
          "remove_from_whitelist"
        ],
        "properties": {
          "remove_from_whitelist": {
            "type": "object",
            "required": [
              "sender"
            ],
            "properties": {
              "sender": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "Binary": {
        "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>. See also <https://github.com/CosmWasm/cosmwasm/blob/main/docs/MESSAGE_TYPES.md>.",
        "type": "string"
      },
      "Cw721ReceiveMsg": {
        "description": "Cw721ReceiveMsg should be de/serialized under `Receive()` variant in a ExecuteMsg",
        "type": "object",
        "required": [
          "msg",
          "sender",
          "token_id"
        ],
        "properties": {
          "msg": {
            "$ref": "#/definitions/Binary"
          },
          "sender": {
            "type": "string"
          },
          "token_id": {
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "oneOf": [
      {
        "description": "Gets ICS721 contract.",
        "type": "object",
        "required": [
          "origin"
        ],
        "properties": {
          "origin": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Gets a list of CW721 contract and channels authorized for ICS721 transfers.",
        "type": "object",
        "required": [
          "whitelist"
        ],
        "properties": {
          "whitelist": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "True in case CW721 contract and channel is authorized for ICS721 transfers.",
        "type": "object",
        "required": [
          "white_listed"
        ],
        "properties": {
          "white_listed": {
            "type": "object",
            "required": [
              "channel",
              "sender"
            ],
            "properties": {
              "channel": {
                "type": "string"
              },
              "sender": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "migrate": null,
  "sudo": null,
  "responses": {
    "origin": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Addr",
      "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
      "type": "string"
    },
    "white_listed": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Boolean",
      "type": "boolean"
    },
    "whitelist": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Array_of_SenderToChannelsResponse",
      "type": "array",
      "items": {
        "$ref": "#/definitions/SenderToChannelsResponse"
      },
      "definitions": {
        "SenderToChannelsResponse": {
          "description": "Authorized CW721 contract and channel for ICS721 transfers.",
          "type": "object",
          "required": [
            "channels",
            "sender"
          ],
          "properties": {
            "channels": {
              "description": "Authorized channels for ICS721 transfers.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "sender": {
              "description": "Authorized CW721 contract for ICS721 transfers.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      }
    }
  }
}
